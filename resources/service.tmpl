// Generated by Protostub
// see more examples: https://github.com/lovelyoyrmia/protostub
// Implement your logic below

package {{ .Package }}

import (
	"context"
	"log"
	{{ .Package }} "{{ .GoPackage }}"
)

// {{ .ServiceName }}Impl implements the gRPC service for {{ .ServiceName }}Impl.
// This is the server struct that will be used to implement the service methods.
type {{ .ServiceName }}Impl struct {
	{{ .Package }}.Unimplemented{{ .ServiceName }}Server
}

// {{ .Method }} handles requests for the {{ .Method }} method.
// It takes a {{ .InputType }} request and returns a {{ .OutputType }} response.
func (s *{{ .ServiceName }}Impl) {{ .Method }}(ctx context.Context, req *{{ .Package }}.{{ .InputType }}) (*{{ .Package }}.{{ .OutputType }}, error) {
	// TODO: Implement your logic here
	log.Println("Received request:", req)
	return &{{ .Package }}.{{ .OutputType }}{}, nil
}

// New{{ .ServiceName }}Server returns a new instance of {{ .ServiceName }}Impl.
// This is used to initialize the gRPC server with the service implementation.
func New{{ .ServiceName }}Server() *{{ .ServiceName }}Impl {
	return &{{ .ServiceName }}Impl{}
}
